"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file

KINOVA (R) KORTEX (TM)

Copyright (c) 2018 Kinova inc. All rights reserved.

This software may be modified and distributed
under the terms of the BSD 3-Clause license.

Refer to the LICENSE file for details.
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _DeviceTypes:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _DeviceTypesEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DeviceTypes.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    UNSPECIFIED_DEVICE_TYPE: _DeviceTypes.ValueType  # 0
    """Unspecified device type"""
    BASE: _DeviceTypes.ValueType  # 1
    """Base module"""
    VISION: _DeviceTypes.ValueType  # 2
    """Vision module"""
    BIG_ACTUATOR: _DeviceTypes.ValueType  # 3
    """Big actuator module"""
    SMALL_ACTUATOR: _DeviceTypes.ValueType  # 4
    """Small actuator module"""
    INTERCONNECT: _DeviceTypes.ValueType  # 5
    """Interface module"""
    GRIPPER: _DeviceTypes.ValueType  # 6
    """Gripper module"""
    MEDIUM_ACTUATOR: _DeviceTypes.ValueType  # 7
    """Medium actuator module"""
    XBIG_ACTUATOR: _DeviceTypes.ValueType  # 8
    """XBig actuator module"""

class DeviceTypes(_DeviceTypes, metaclass=_DeviceTypesEnumTypeWrapper):
    """Admissible device types"""

UNSPECIFIED_DEVICE_TYPE: DeviceTypes.ValueType  # 0
"""Unspecified device type"""
BASE: DeviceTypes.ValueType  # 1
"""Base module"""
VISION: DeviceTypes.ValueType  # 2
"""Vision module"""
BIG_ACTUATOR: DeviceTypes.ValueType  # 3
"""Big actuator module"""
SMALL_ACTUATOR: DeviceTypes.ValueType  # 4
"""Small actuator module"""
INTERCONNECT: DeviceTypes.ValueType  # 5
"""Interface module"""
GRIPPER: DeviceTypes.ValueType  # 6
"""Gripper module"""
MEDIUM_ACTUATOR: DeviceTypes.ValueType  # 7
"""Medium actuator module"""
XBIG_ACTUATOR: DeviceTypes.ValueType  # 8
"""XBig actuator module"""
global___DeviceTypes = DeviceTypes

class _SafetyStatusValue:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _SafetyStatusValueEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SafetyStatusValue.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    SAFETY_STATUS_UNSPECIFIED: _SafetyStatusValue.ValueType  # 0
    """Unspecified safety status"""
    SAFETY_STATUS_WARNING: _SafetyStatusValue.ValueType  # 1
    """Warning safety reached"""
    SAFETY_STATUS_ERROR: _SafetyStatusValue.ValueType  # 2
    """Error safety reached"""
    SAFETY_STATUS_NORMAL: _SafetyStatusValue.ValueType  # 3
    """Safety is off"""

class SafetyStatusValue(_SafetyStatusValue, metaclass=_SafetyStatusValueEnumTypeWrapper):
    """Admissible safety statuses"""

SAFETY_STATUS_UNSPECIFIED: SafetyStatusValue.ValueType  # 0
"""Unspecified safety status"""
SAFETY_STATUS_WARNING: SafetyStatusValue.ValueType  # 1
"""Warning safety reached"""
SAFETY_STATUS_ERROR: SafetyStatusValue.ValueType  # 2
"""Error safety reached"""
SAFETY_STATUS_NORMAL: SafetyStatusValue.ValueType  # 3
"""Safety is off"""
global___SafetyStatusValue = SafetyStatusValue

class _Permission:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _PermissionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Permission.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    NO_PERMISSION: _Permission.ValueType  # 0
    """No permission"""
    READ_PERMISSION: _Permission.ValueType  # 1
    """Read permission. Refers to an entity that can be read"""
    UPDATE_PERMISSION: _Permission.ValueType  # 2
    """Update permission. Refers to an entity that can be modified"""
    DELETE_PERMISSION: _Permission.ValueType  # 4
    """Delete permission. Refers to an entity that can be deleted"""

class Permission(_Permission, metaclass=_PermissionEnumTypeWrapper):
    """Admissible permissions. Used as bitfields"""

NO_PERMISSION: Permission.ValueType  # 0
"""No permission"""
READ_PERMISSION: Permission.ValueType  # 1
"""Read permission. Refers to an entity that can be read"""
UPDATE_PERMISSION: Permission.ValueType  # 2
"""Update permission. Refers to an entity that can be modified"""
DELETE_PERMISSION: Permission.ValueType  # 4
"""Delete permission. Refers to an entity that can be deleted"""
global___Permission = Permission

class _NotificationType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _NotificationTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_NotificationType.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    NOTIFICATION_TYPE_UNSPECIFIED: _NotificationType.ValueType  # 0
    """Unspecified notification"""
    NOTIFICATION_TYPE_THRESHOLD: _NotificationType.ValueType  # 1
    """Threshold notification. Refers to a notification sent beyond a specific threshold (not implemented yet)"""
    NOTIFICATION_TYPE_FIX_RATE: _NotificationType.ValueType  # 2
    """Fix rate notification. Refers to a notification sent at a predetermined fix rate (not implemented yet)"""
    NOTIFICATION_TYPE_EVENT: _NotificationType.ValueType  # 3
    """Event type notification. Refers to a notification sent in response to an event"""

class NotificationType(_NotificationType, metaclass=_NotificationTypeEnumTypeWrapper):
    """Admissible notification types"""

NOTIFICATION_TYPE_UNSPECIFIED: NotificationType.ValueType  # 0
"""Unspecified notification"""
NOTIFICATION_TYPE_THRESHOLD: NotificationType.ValueType  # 1
"""Threshold notification. Refers to a notification sent beyond a specific threshold (not implemented yet)"""
NOTIFICATION_TYPE_FIX_RATE: NotificationType.ValueType  # 2
"""Fix rate notification. Refers to a notification sent at a predetermined fix rate (not implemented yet)"""
NOTIFICATION_TYPE_EVENT: NotificationType.ValueType  # 3
"""Event type notification. Refers to a notification sent in response to an event"""
global___NotificationType = NotificationType

class _Unit:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _UnitEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Unit.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    UNSPECIFIED_UNIT: _Unit.ValueType  # 0
    """Unspecified unit"""
    CELSIUS: _Unit.ValueType  # 1
    """Degree Celsius"""
    AMPERE: _Unit.ValueType  # 2
    """Ampere"""
    VOLT: _Unit.ValueType  # 3
    """Volt"""
    METER_PER_SECOND: _Unit.ValueType  # 4
    """Meter per second"""
    DEGREE_PER_SECOND: _Unit.ValueType  # 5
    """Degree per second"""
    METER_PER_SECOND_2: _Unit.ValueType  # 6
    """Meter per second squared"""
    DEGREE_PER_SECOND_2: _Unit.ValueType  # 7
    """Degree per second squared"""
    NEWTON: _Unit.ValueType  # 8
    """Newton"""
    NEWTON_METER: _Unit.ValueType  # 9
    """Newton * meter"""
    KILOGRAM: _Unit.ValueType  # 10
    """Kilogram"""
    DEGREE: _Unit.ValueType  # 11
    """Degree"""
    TICK: _Unit.ValueType  # 12
    """Tick"""
    DEGREE_PER_MILLISECOND: _Unit.ValueType  # 13
    """Degre per millisecond"""

class Unit(_Unit, metaclass=_UnitEnumTypeWrapper):
    """Admissible units used throughout API methods"""

UNSPECIFIED_UNIT: Unit.ValueType  # 0
"""Unspecified unit"""
CELSIUS: Unit.ValueType  # 1
"""Degree Celsius"""
AMPERE: Unit.ValueType  # 2
"""Ampere"""
VOLT: Unit.ValueType  # 3
"""Volt"""
METER_PER_SECOND: Unit.ValueType  # 4
"""Meter per second"""
DEGREE_PER_SECOND: Unit.ValueType  # 5
"""Degree per second"""
METER_PER_SECOND_2: Unit.ValueType  # 6
"""Meter per second squared"""
DEGREE_PER_SECOND_2: Unit.ValueType  # 7
"""Degree per second squared"""
NEWTON: Unit.ValueType  # 8
"""Newton"""
NEWTON_METER: Unit.ValueType  # 9
"""Newton * meter"""
KILOGRAM: Unit.ValueType  # 10
"""Kilogram"""
DEGREE: Unit.ValueType  # 11
"""Degree"""
TICK: Unit.ValueType  # 12
"""Tick"""
DEGREE_PER_MILLISECOND: Unit.ValueType  # 13
"""Degre per millisecond"""
global___Unit = Unit

class _ArmState:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ArmStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ArmState.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ARMSTATE_UNSPECIFIED: _ArmState.ValueType  # 0
    """Unspecified arm state"""
    ARMSTATE_BASE_INITIALIZATION: _ArmState.ValueType  # 1
    """Cannot be reported as the Base initialization must be completed before allowing user connection"""
    ARMSTATE_IDLE: _ArmState.ValueType  # 2
    """Base initialization succeeded"""
    ARMSTATE_INITIALIZATION: _ArmState.ValueType  # 3
    """Arm is being initialized"""
    ARMSTATE_IN_FAULT: _ArmState.ValueType  # 4
    """Arm is in fault"""
    ARMSTATE_MAINTENANCE: _ArmState.ValueType  # 5
    """Arm is in maintenance"""
    ARMSTATE_SERVOING_LOW_LEVEL: _ArmState.ValueType  # 6
    """Arm is in low-level servoing mode"""
    ARMSTATE_SERVOING_READY: _ArmState.ValueType  # 7
    """Arm is ready to be controlled"""
    ARMSTATE_SERVOING_PLAYING_SEQUENCE: _ArmState.ValueType  # 8
    """Arm is currently being controlled via a sequence"""
    ARMSTATE_SERVOING_MANUALLY_CONTROLLED: _ArmState.ValueType  # 9
    """Arm is currently being controlled manually"""
    ARMSTATE_BRAKE_RELEASING: _ArmState.ValueType  # 10
    """Arm brakes are being released"""
    ARMSTATE_RESERVED: _ArmState.ValueType  # 255
    """For debugging, this state must never be reported outside the base. this means that a state is not mapped correctly"""

class ArmState(_ArmState, metaclass=_ArmStateEnumTypeWrapper):
    """Admissible robot arm states"""

ARMSTATE_UNSPECIFIED: ArmState.ValueType  # 0
"""Unspecified arm state"""
ARMSTATE_BASE_INITIALIZATION: ArmState.ValueType  # 1
"""Cannot be reported as the Base initialization must be completed before allowing user connection"""
ARMSTATE_IDLE: ArmState.ValueType  # 2
"""Base initialization succeeded"""
ARMSTATE_INITIALIZATION: ArmState.ValueType  # 3
"""Arm is being initialized"""
ARMSTATE_IN_FAULT: ArmState.ValueType  # 4
"""Arm is in fault"""
ARMSTATE_MAINTENANCE: ArmState.ValueType  # 5
"""Arm is in maintenance"""
ARMSTATE_SERVOING_LOW_LEVEL: ArmState.ValueType  # 6
"""Arm is in low-level servoing mode"""
ARMSTATE_SERVOING_READY: ArmState.ValueType  # 7
"""Arm is ready to be controlled"""
ARMSTATE_SERVOING_PLAYING_SEQUENCE: ArmState.ValueType  # 8
"""Arm is currently being controlled via a sequence"""
ARMSTATE_SERVOING_MANUALLY_CONTROLLED: ArmState.ValueType  # 9
"""Arm is currently being controlled manually"""
ARMSTATE_BRAKE_RELEASING: ArmState.ValueType  # 10
"""Arm brakes are being released"""
ARMSTATE_RESERVED: ArmState.ValueType  # 255
"""For debugging, this state must never be reported outside the base. this means that a state is not mapped correctly"""
global___ArmState = ArmState

class _UARTSpeed:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _UARTSpeedEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_UARTSpeed.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    UART_SPEED_UNSPECIFIED: _UARTSpeed.ValueType  # 0
    """Unspecified UART speed"""
    UART_SPEED_4800: _UARTSpeed.ValueType  # 1
    """4800 bps"""
    UART_SPEED_9600: _UARTSpeed.ValueType  # 2
    """9600 bps"""
    UART_SPEED_19200: _UARTSpeed.ValueType  # 3
    """19200 bps"""
    UART_SPEED_38400: _UARTSpeed.ValueType  # 4
    """38400 bps"""
    UART_SPEED_57600: _UARTSpeed.ValueType  # 5
    """57600 bps"""
    UART_SPEED_115200: _UARTSpeed.ValueType  # 6
    """115200 bps"""
    UART_SPEED_230400: _UARTSpeed.ValueType  # 7
    """230400 bps"""
    UART_SPEED_460800: _UARTSpeed.ValueType  # 8
    """460800 bps"""
    UART_SPEED_921600: _UARTSpeed.ValueType  # 9
    """921600 bps"""
    UART_SPEED_1382400: _UARTSpeed.ValueType  # 10
    """1382400 bps"""
    UART_SPEED_1612800: _UARTSpeed.ValueType  # 11
    """1612800 bps"""
    UART_SPEED_1843200: _UARTSpeed.ValueType  # 12
    """1843200 bps"""
    UART_SPEED_2073600: _UARTSpeed.ValueType  # 13
    """2073600 bps"""
    UART_SPEED_2188800: _UARTSpeed.ValueType  # 14
    """2188800 bps"""
    UART_SPEED_2246400: _UARTSpeed.ValueType  # 15
    """2246400 bps"""

class UARTSpeed(_UARTSpeed, metaclass=_UARTSpeedEnumTypeWrapper):
    """Admissible UART baudrates"""

UART_SPEED_UNSPECIFIED: UARTSpeed.ValueType  # 0
"""Unspecified UART speed"""
UART_SPEED_4800: UARTSpeed.ValueType  # 1
"""4800 bps"""
UART_SPEED_9600: UARTSpeed.ValueType  # 2
"""9600 bps"""
UART_SPEED_19200: UARTSpeed.ValueType  # 3
"""19200 bps"""
UART_SPEED_38400: UARTSpeed.ValueType  # 4
"""38400 bps"""
UART_SPEED_57600: UARTSpeed.ValueType  # 5
"""57600 bps"""
UART_SPEED_115200: UARTSpeed.ValueType  # 6
"""115200 bps"""
UART_SPEED_230400: UARTSpeed.ValueType  # 7
"""230400 bps"""
UART_SPEED_460800: UARTSpeed.ValueType  # 8
"""460800 bps"""
UART_SPEED_921600: UARTSpeed.ValueType  # 9
"""921600 bps"""
UART_SPEED_1382400: UARTSpeed.ValueType  # 10
"""1382400 bps"""
UART_SPEED_1612800: UARTSpeed.ValueType  # 11
"""1612800 bps"""
UART_SPEED_1843200: UARTSpeed.ValueType  # 12
"""1843200 bps"""
UART_SPEED_2073600: UARTSpeed.ValueType  # 13
"""2073600 bps"""
UART_SPEED_2188800: UARTSpeed.ValueType  # 14
"""2188800 bps"""
UART_SPEED_2246400: UARTSpeed.ValueType  # 15
"""2246400 bps"""
global___UARTSpeed = UARTSpeed

class _UARTWordLength:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _UARTWordLengthEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_UARTWordLength.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    UART_WORD_LENGTH_UNSPECIFIED: _UARTWordLength.ValueType  # 0
    """Unspecified UART word length"""
    UART_WORD_LENGTH_7: _UARTWordLength.ValueType  # 1
    """7 bits"""
    UART_WORD_LENGTH_8: _UARTWordLength.ValueType  # 2
    """8 bits"""
    UART_WORD_LENGTH_9: _UARTWordLength.ValueType  # 3
    """9 bits"""

class UARTWordLength(_UARTWordLength, metaclass=_UARTWordLengthEnumTypeWrapper):
    """Admissible UART word lengths"""

UART_WORD_LENGTH_UNSPECIFIED: UARTWordLength.ValueType  # 0
"""Unspecified UART word length"""
UART_WORD_LENGTH_7: UARTWordLength.ValueType  # 1
"""7 bits"""
UART_WORD_LENGTH_8: UARTWordLength.ValueType  # 2
"""8 bits"""
UART_WORD_LENGTH_9: UARTWordLength.ValueType  # 3
"""9 bits"""
global___UARTWordLength = UARTWordLength

class _UARTStopBits:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _UARTStopBitsEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_UARTStopBits.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    UART_STOP_BITS_UNSPECIFIED: _UARTStopBits.ValueType  # 0
    """Unspecified UART stop bits"""
    UART_STOP_BITS_0_5: _UARTStopBits.ValueType  # 1
    """0.5 stop bit"""
    UART_STOP_BITS_1: _UARTStopBits.ValueType  # 2
    """1 stop bit"""
    UART_STOP_BITS_1_5: _UARTStopBits.ValueType  # 3
    """1.5 stop bits"""
    UART_STOP_BITS_2: _UARTStopBits.ValueType  # 4
    """2 stop bits"""

class UARTStopBits(_UARTStopBits, metaclass=_UARTStopBitsEnumTypeWrapper):
    """Admissible UART stop bits"""

UART_STOP_BITS_UNSPECIFIED: UARTStopBits.ValueType  # 0
"""Unspecified UART stop bits"""
UART_STOP_BITS_0_5: UARTStopBits.ValueType  # 1
"""0.5 stop bit"""
UART_STOP_BITS_1: UARTStopBits.ValueType  # 2
"""1 stop bit"""
UART_STOP_BITS_1_5: UARTStopBits.ValueType  # 3
"""1.5 stop bits"""
UART_STOP_BITS_2: UARTStopBits.ValueType  # 4
"""2 stop bits"""
global___UARTStopBits = UARTStopBits

class _UARTParity:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _UARTParityEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_UARTParity.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    UART_PARITY_UNSPECIFIED: _UARTParity.ValueType  # 0
    """Unspecified UART parity"""
    UART_PARITY_NONE: _UARTParity.ValueType  # 1
    """No parity"""
    UART_PARITY_ODD: _UARTParity.ValueType  # 2
    """Odd parity"""
    UART_PARITY_EVEN: _UARTParity.ValueType  # 3
    """Even parity"""

class UARTParity(_UARTParity, metaclass=_UARTParityEnumTypeWrapper):
    """Admissible UART parity mode"""

UART_PARITY_UNSPECIFIED: UARTParity.ValueType  # 0
"""Unspecified UART parity"""
UART_PARITY_NONE: UARTParity.ValueType  # 1
"""No parity"""
UART_PARITY_ODD: UARTParity.ValueType  # 2
"""Odd parity"""
UART_PARITY_EVEN: UARTParity.ValueType  # 3
"""Even parity"""
global___UARTParity = UARTParity

class _CartesianReferenceFrame:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _CartesianReferenceFrameEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CartesianReferenceFrame.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    CARTESIAN_REFERENCE_FRAME_UNSPECIFIED: _CartesianReferenceFrame.ValueType  # 0
    """Unspecified Cartesian reference frame"""
    CARTESIAN_REFERENCE_FRAME_MIXED: _CartesianReferenceFrame.ValueType  # 1
    """Mixed reference frame where translation reference = base and  orientation reference = tool"""
    CARTESIAN_REFERENCE_FRAME_TOOL: _CartesianReferenceFrame.ValueType  # 2
    """Tool reference frame where translation reference = tool and orientation reference = tool"""
    CARTESIAN_REFERENCE_FRAME_BASE: _CartesianReferenceFrame.ValueType  # 3
    """Base reference frame where the translation reference = base and orientation reference = base"""

class CartesianReferenceFrame(_CartesianReferenceFrame, metaclass=_CartesianReferenceFrameEnumTypeWrapper):
    """ Admissible Cartesian reference frame modes"""

CARTESIAN_REFERENCE_FRAME_UNSPECIFIED: CartesianReferenceFrame.ValueType  # 0
"""Unspecified Cartesian reference frame"""
CARTESIAN_REFERENCE_FRAME_MIXED: CartesianReferenceFrame.ValueType  # 1
"""Mixed reference frame where translation reference = base and  orientation reference = tool"""
CARTESIAN_REFERENCE_FRAME_TOOL: CartesianReferenceFrame.ValueType  # 2
"""Tool reference frame where translation reference = tool and orientation reference = tool"""
CARTESIAN_REFERENCE_FRAME_BASE: CartesianReferenceFrame.ValueType  # 3
"""Base reference frame where the translation reference = base and orientation reference = base"""
global___CartesianReferenceFrame = CartesianReferenceFrame

class _CountryCodeIdentifier:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _CountryCodeIdentifierEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CountryCodeIdentifier.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    UNSPECIFIED_COUNTRY_CODE: _CountryCodeIdentifier.ValueType  # 0
    UNITED_ARAB_EMIRATES_AE: _CountryCodeIdentifier.ValueType  # 1
    ANTIGUA_AND_BARBUDA_AG: _CountryCodeIdentifier.ValueType  # 2
    ANGUILLA_AI: _CountryCodeIdentifier.ValueType  # 3
    ALBANIA_AL: _CountryCodeIdentifier.ValueType  # 4
    AMERICAN_SAMOA_AS: _CountryCodeIdentifier.ValueType  # 5
    AUSTRIA_AT: _CountryCodeIdentifier.ValueType  # 6
    AUSTRALIA_AU: _CountryCodeIdentifier.ValueType  # 7
    ARUBA_AW: _CountryCodeIdentifier.ValueType  # 8
    AZERBAIJAN_AZ: _CountryCodeIdentifier.ValueType  # 9
    BOSNIA_AND_HERZEGOVINA_BA: _CountryCodeIdentifier.ValueType  # 10
    BANGLADESH_BD: _CountryCodeIdentifier.ValueType  # 11
    BELGIUM_BE: _CountryCodeIdentifier.ValueType  # 12
    BULGARIA_BG: _CountryCodeIdentifier.ValueType  # 13
    BAHRAIN_BH: _CountryCodeIdentifier.ValueType  # 14
    BERMUDA_BM: _CountryCodeIdentifier.ValueType  # 15
    BRUNEI_DARUSSALAM_BN: _CountryCodeIdentifier.ValueType  # 16
    BRAZIL_BR: _CountryCodeIdentifier.ValueType  # 17
    BAHAMAS_BS: _CountryCodeIdentifier.ValueType  # 18
    BELARUS_BY: _CountryCodeIdentifier.ValueType  # 19
    SWITZERLAND_CH: _CountryCodeIdentifier.ValueType  # 20
    CANADA_CA: _CountryCodeIdentifier.ValueType  # 21
    CHINA_CN: _CountryCodeIdentifier.ValueType  # 22
    COLOMBIA_CO: _CountryCodeIdentifier.ValueType  # 23
    COSTA_RICA_CR: _CountryCodeIdentifier.ValueType  # 24
    CYPRUS_CY: _CountryCodeIdentifier.ValueType  # 25
    CZECH_REPUBLIC_CZ: _CountryCodeIdentifier.ValueType  # 26
    GERMANY_DE: _CountryCodeIdentifier.ValueType  # 27
    DENMARK_DK: _CountryCodeIdentifier.ValueType  # 28
    ECUADOR_EC: _CountryCodeIdentifier.ValueType  # 29
    ESTONIA_EE: _CountryCodeIdentifier.ValueType  # 30
    EGYPT_EG: _CountryCodeIdentifier.ValueType  # 31
    SPAIN_ES: _CountryCodeIdentifier.ValueType  # 32
    ETHIOPIA_ET: _CountryCodeIdentifier.ValueType  # 33
    FINLAND_FI: _CountryCodeIdentifier.ValueType  # 34
    FRANCE_FR: _CountryCodeIdentifier.ValueType  # 35
    UNITED_KINGDOM_GB: _CountryCodeIdentifier.ValueType  # 36
    GRENADA_GD: _CountryCodeIdentifier.ValueType  # 37
    FRENCH_GUIANA_GF: _CountryCodeIdentifier.ValueType  # 38
    GUADELOUPE_GP: _CountryCodeIdentifier.ValueType  # 39
    GREECE_GR: _CountryCodeIdentifier.ValueType  # 40
    GUATEMALA_GT: _CountryCodeIdentifier.ValueType  # 41
    GUAM_GU: _CountryCodeIdentifier.ValueType  # 42
    HONG_KONG_HK: _CountryCodeIdentifier.ValueType  # 43
    CROATIA_HR: _CountryCodeIdentifier.ValueType  # 44
    HUNGARY_HU: _CountryCodeIdentifier.ValueType  # 45
    INDIA_IN: _CountryCodeIdentifier.ValueType  # 46
    INDONESIA_ID: _CountryCodeIdentifier.ValueType  # 47
    IRELAND_IE: _CountryCodeIdentifier.ValueType  # 48
    ISRAEL_IL: _CountryCodeIdentifier.ValueType  # 49
    ICELAND_IS: _CountryCodeIdentifier.ValueType  # 50
    ITALY_IT: _CountryCodeIdentifier.ValueType  # 51
    JORDAN_JO: _CountryCodeIdentifier.ValueType  # 52
    JAPAN_JP: _CountryCodeIdentifier.ValueType  # 53
    CAMBODIA_KH: _CountryCodeIdentifier.ValueType  # 54
    REPUBLIC_OF_KOREA_KR: _CountryCodeIdentifier.ValueType  # 55
    KUWAIT_KW: _CountryCodeIdentifier.ValueType  # 56
    CAYMAN_ISLANDS_KY: _CountryCodeIdentifier.ValueType  # 57
    LAO_PDR_LA: _CountryCodeIdentifier.ValueType  # 58
    LEBANON_LB: _CountryCodeIdentifier.ValueType  # 59
    LIECHTENSTEIN_LI: _CountryCodeIdentifier.ValueType  # 60
    SRI_LANKA_LK: _CountryCodeIdentifier.ValueType  # 61
    LESOTHO_LS: _CountryCodeIdentifier.ValueType  # 62
    LITHUANIA_LT: _CountryCodeIdentifier.ValueType  # 63
    LUXEMBOURG_LU: _CountryCodeIdentifier.ValueType  # 64
    LATVIA_LV: _CountryCodeIdentifier.ValueType  # 65
    MOROCCO_MA: _CountryCodeIdentifier.ValueType  # 66
    MONACO_MC: _CountryCodeIdentifier.ValueType  # 67
    MOLDOVA_MD: _CountryCodeIdentifier.ValueType  # 68
    MONTENEGRO_ME: _CountryCodeIdentifier.ValueType  # 69
    REPUBLIC_OF_MACEDONIA_MK: _CountryCodeIdentifier.ValueType  # 70
    MONGOLIA_MN: _CountryCodeIdentifier.ValueType  # 71
    MARTINIQUE_MQ: _CountryCodeIdentifier.ValueType  # 72
    MAURITANIA_MR: _CountryCodeIdentifier.ValueType  # 73
    MALTA_MT: _CountryCodeIdentifier.ValueType  # 74
    MAURITIUS_MU: _CountryCodeIdentifier.ValueType  # 75
    MALDIVES_MV: _CountryCodeIdentifier.ValueType  # 76
    MALAWI_MW: _CountryCodeIdentifier.ValueType  # 77
    MEXICO_MX: _CountryCodeIdentifier.ValueType  # 78
    MALAYSIA_MY: _CountryCodeIdentifier.ValueType  # 79
    NICARAGUA_NI: _CountryCodeIdentifier.ValueType  # 80
    NETHERLANDS_NL: _CountryCodeIdentifier.ValueType  # 81
    NORWAY_NO: _CountryCodeIdentifier.ValueType  # 82
    NEW_ZEALAND_NZ: _CountryCodeIdentifier.ValueType  # 83
    OMAN_OM: _CountryCodeIdentifier.ValueType  # 84
    PANAMA_PA: _CountryCodeIdentifier.ValueType  # 85
    PERU_PE: _CountryCodeIdentifier.ValueType  # 86
    PHILIPPINES_PH: _CountryCodeIdentifier.ValueType  # 87
    POLAND_PL: _CountryCodeIdentifier.ValueType  # 88
    PUERTO_RICO_PR: _CountryCodeIdentifier.ValueType  # 89
    PORTUGAL_PT: _CountryCodeIdentifier.ValueType  # 90
    PARAGUAY_PY: _CountryCodeIdentifier.ValueType  # 91
    REUNION_RE: _CountryCodeIdentifier.ValueType  # 92
    ROMANIA_RO: _CountryCodeIdentifier.ValueType  # 93
    SERBIA_RS: _CountryCodeIdentifier.ValueType  # 94
    RUSSIAN_FEDERATION_RU: _CountryCodeIdentifier.ValueType  # 95
    SWEDEN_SE: _CountryCodeIdentifier.ValueType  # 96
    SINGAPORE_SI: _CountryCodeIdentifier.ValueType  # 97
    SLOVAKIA_SK: _CountryCodeIdentifier.ValueType  # 98
    EL_SALVADOR_SV: _CountryCodeIdentifier.ValueType  # 99
    THAILAND_TH: _CountryCodeIdentifier.ValueType  # 100
    TUNISIA_TN: _CountryCodeIdentifier.ValueType  # 101
    TURKEY_TR: _CountryCodeIdentifier.ValueType  # 102
    TRINIDAD_AND_TOBAGO_TT: _CountryCodeIdentifier.ValueType  # 103
    TAIWAN_PROVINCE_OF_CHINA_TW: _CountryCodeIdentifier.ValueType  # 104
    UKRAINE_UA: _CountryCodeIdentifier.ValueType  # 105
    UNITED_STATES_US: _CountryCodeIdentifier.ValueType  # 106
    HOLY_SEE_VATICAN_CITY_STATE_VA: _CountryCodeIdentifier.ValueType  # 107
    BOLIVARIAN_REPUBLIC_OF_VENEZUELA_VE: _CountryCodeIdentifier.ValueType  # 108
    BRITISH_VIRGIN_ISLANDS_VG: _CountryCodeIdentifier.ValueType  # 109
    VIETNAM_VN: _CountryCodeIdentifier.ValueType  # 110
    MAYOTTE_YT: _CountryCodeIdentifier.ValueType  # 111
    SOUTH_AFRICA_ZA: _CountryCodeIdentifier.ValueType  # 112

class CountryCodeIdentifier(_CountryCodeIdentifier, metaclass=_CountryCodeIdentifierEnumTypeWrapper):
    """Supported ISO3166 country identifiers"""

UNSPECIFIED_COUNTRY_CODE: CountryCodeIdentifier.ValueType  # 0
UNITED_ARAB_EMIRATES_AE: CountryCodeIdentifier.ValueType  # 1
ANTIGUA_AND_BARBUDA_AG: CountryCodeIdentifier.ValueType  # 2
ANGUILLA_AI: CountryCodeIdentifier.ValueType  # 3
ALBANIA_AL: CountryCodeIdentifier.ValueType  # 4
AMERICAN_SAMOA_AS: CountryCodeIdentifier.ValueType  # 5
AUSTRIA_AT: CountryCodeIdentifier.ValueType  # 6
AUSTRALIA_AU: CountryCodeIdentifier.ValueType  # 7
ARUBA_AW: CountryCodeIdentifier.ValueType  # 8
AZERBAIJAN_AZ: CountryCodeIdentifier.ValueType  # 9
BOSNIA_AND_HERZEGOVINA_BA: CountryCodeIdentifier.ValueType  # 10
BANGLADESH_BD: CountryCodeIdentifier.ValueType  # 11
BELGIUM_BE: CountryCodeIdentifier.ValueType  # 12
BULGARIA_BG: CountryCodeIdentifier.ValueType  # 13
BAHRAIN_BH: CountryCodeIdentifier.ValueType  # 14
BERMUDA_BM: CountryCodeIdentifier.ValueType  # 15
BRUNEI_DARUSSALAM_BN: CountryCodeIdentifier.ValueType  # 16
BRAZIL_BR: CountryCodeIdentifier.ValueType  # 17
BAHAMAS_BS: CountryCodeIdentifier.ValueType  # 18
BELARUS_BY: CountryCodeIdentifier.ValueType  # 19
SWITZERLAND_CH: CountryCodeIdentifier.ValueType  # 20
CANADA_CA: CountryCodeIdentifier.ValueType  # 21
CHINA_CN: CountryCodeIdentifier.ValueType  # 22
COLOMBIA_CO: CountryCodeIdentifier.ValueType  # 23
COSTA_RICA_CR: CountryCodeIdentifier.ValueType  # 24
CYPRUS_CY: CountryCodeIdentifier.ValueType  # 25
CZECH_REPUBLIC_CZ: CountryCodeIdentifier.ValueType  # 26
GERMANY_DE: CountryCodeIdentifier.ValueType  # 27
DENMARK_DK: CountryCodeIdentifier.ValueType  # 28
ECUADOR_EC: CountryCodeIdentifier.ValueType  # 29
ESTONIA_EE: CountryCodeIdentifier.ValueType  # 30
EGYPT_EG: CountryCodeIdentifier.ValueType  # 31
SPAIN_ES: CountryCodeIdentifier.ValueType  # 32
ETHIOPIA_ET: CountryCodeIdentifier.ValueType  # 33
FINLAND_FI: CountryCodeIdentifier.ValueType  # 34
FRANCE_FR: CountryCodeIdentifier.ValueType  # 35
UNITED_KINGDOM_GB: CountryCodeIdentifier.ValueType  # 36
GRENADA_GD: CountryCodeIdentifier.ValueType  # 37
FRENCH_GUIANA_GF: CountryCodeIdentifier.ValueType  # 38
GUADELOUPE_GP: CountryCodeIdentifier.ValueType  # 39
GREECE_GR: CountryCodeIdentifier.ValueType  # 40
GUATEMALA_GT: CountryCodeIdentifier.ValueType  # 41
GUAM_GU: CountryCodeIdentifier.ValueType  # 42
HONG_KONG_HK: CountryCodeIdentifier.ValueType  # 43
CROATIA_HR: CountryCodeIdentifier.ValueType  # 44
HUNGARY_HU: CountryCodeIdentifier.ValueType  # 45
INDIA_IN: CountryCodeIdentifier.ValueType  # 46
INDONESIA_ID: CountryCodeIdentifier.ValueType  # 47
IRELAND_IE: CountryCodeIdentifier.ValueType  # 48
ISRAEL_IL: CountryCodeIdentifier.ValueType  # 49
ICELAND_IS: CountryCodeIdentifier.ValueType  # 50
ITALY_IT: CountryCodeIdentifier.ValueType  # 51
JORDAN_JO: CountryCodeIdentifier.ValueType  # 52
JAPAN_JP: CountryCodeIdentifier.ValueType  # 53
CAMBODIA_KH: CountryCodeIdentifier.ValueType  # 54
REPUBLIC_OF_KOREA_KR: CountryCodeIdentifier.ValueType  # 55
KUWAIT_KW: CountryCodeIdentifier.ValueType  # 56
CAYMAN_ISLANDS_KY: CountryCodeIdentifier.ValueType  # 57
LAO_PDR_LA: CountryCodeIdentifier.ValueType  # 58
LEBANON_LB: CountryCodeIdentifier.ValueType  # 59
LIECHTENSTEIN_LI: CountryCodeIdentifier.ValueType  # 60
SRI_LANKA_LK: CountryCodeIdentifier.ValueType  # 61
LESOTHO_LS: CountryCodeIdentifier.ValueType  # 62
LITHUANIA_LT: CountryCodeIdentifier.ValueType  # 63
LUXEMBOURG_LU: CountryCodeIdentifier.ValueType  # 64
LATVIA_LV: CountryCodeIdentifier.ValueType  # 65
MOROCCO_MA: CountryCodeIdentifier.ValueType  # 66
MONACO_MC: CountryCodeIdentifier.ValueType  # 67
MOLDOVA_MD: CountryCodeIdentifier.ValueType  # 68
MONTENEGRO_ME: CountryCodeIdentifier.ValueType  # 69
REPUBLIC_OF_MACEDONIA_MK: CountryCodeIdentifier.ValueType  # 70
MONGOLIA_MN: CountryCodeIdentifier.ValueType  # 71
MARTINIQUE_MQ: CountryCodeIdentifier.ValueType  # 72
MAURITANIA_MR: CountryCodeIdentifier.ValueType  # 73
MALTA_MT: CountryCodeIdentifier.ValueType  # 74
MAURITIUS_MU: CountryCodeIdentifier.ValueType  # 75
MALDIVES_MV: CountryCodeIdentifier.ValueType  # 76
MALAWI_MW: CountryCodeIdentifier.ValueType  # 77
MEXICO_MX: CountryCodeIdentifier.ValueType  # 78
MALAYSIA_MY: CountryCodeIdentifier.ValueType  # 79
NICARAGUA_NI: CountryCodeIdentifier.ValueType  # 80
NETHERLANDS_NL: CountryCodeIdentifier.ValueType  # 81
NORWAY_NO: CountryCodeIdentifier.ValueType  # 82
NEW_ZEALAND_NZ: CountryCodeIdentifier.ValueType  # 83
OMAN_OM: CountryCodeIdentifier.ValueType  # 84
PANAMA_PA: CountryCodeIdentifier.ValueType  # 85
PERU_PE: CountryCodeIdentifier.ValueType  # 86
PHILIPPINES_PH: CountryCodeIdentifier.ValueType  # 87
POLAND_PL: CountryCodeIdentifier.ValueType  # 88
PUERTO_RICO_PR: CountryCodeIdentifier.ValueType  # 89
PORTUGAL_PT: CountryCodeIdentifier.ValueType  # 90
PARAGUAY_PY: CountryCodeIdentifier.ValueType  # 91
REUNION_RE: CountryCodeIdentifier.ValueType  # 92
ROMANIA_RO: CountryCodeIdentifier.ValueType  # 93
SERBIA_RS: CountryCodeIdentifier.ValueType  # 94
RUSSIAN_FEDERATION_RU: CountryCodeIdentifier.ValueType  # 95
SWEDEN_SE: CountryCodeIdentifier.ValueType  # 96
SINGAPORE_SI: CountryCodeIdentifier.ValueType  # 97
SLOVAKIA_SK: CountryCodeIdentifier.ValueType  # 98
EL_SALVADOR_SV: CountryCodeIdentifier.ValueType  # 99
THAILAND_TH: CountryCodeIdentifier.ValueType  # 100
TUNISIA_TN: CountryCodeIdentifier.ValueType  # 101
TURKEY_TR: CountryCodeIdentifier.ValueType  # 102
TRINIDAD_AND_TOBAGO_TT: CountryCodeIdentifier.ValueType  # 103
TAIWAN_PROVINCE_OF_CHINA_TW: CountryCodeIdentifier.ValueType  # 104
UKRAINE_UA: CountryCodeIdentifier.ValueType  # 105
UNITED_STATES_US: CountryCodeIdentifier.ValueType  # 106
HOLY_SEE_VATICAN_CITY_STATE_VA: CountryCodeIdentifier.ValueType  # 107
BOLIVARIAN_REPUBLIC_OF_VENEZUELA_VE: CountryCodeIdentifier.ValueType  # 108
BRITISH_VIRGIN_ISLANDS_VG: CountryCodeIdentifier.ValueType  # 109
VIETNAM_VN: CountryCodeIdentifier.ValueType  # 110
MAYOTTE_YT: CountryCodeIdentifier.ValueType  # 111
SOUTH_AFRICA_ZA: CountryCodeIdentifier.ValueType  # 112
global___CountryCodeIdentifier = CountryCodeIdentifier

class DeviceHandle(google.protobuf.message.Message):
    """Reference to a specific device"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DEVICE_TYPE_FIELD_NUMBER: builtins.int
    DEVICE_IDENTIFIER_FIELD_NUMBER: builtins.int
    ORDER_FIELD_NUMBER: builtins.int
    device_type: global___DeviceTypes.ValueType
    """Device type"""
    device_identifier: builtins.int
    """Unique device identifier (used with other services)"""
    order: builtins.int
    """Unique value indicating the order of that device versus the others to facilitate representation"""
    def __init__(
        self,
        *,
        device_type: global___DeviceTypes.ValueType = ...,
        device_identifier: builtins.int = ...,
        order: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["device_identifier", b"device_identifier", "device_type", b"device_type", "order", b"order"]) -> None: ...

global___DeviceHandle = DeviceHandle

class Empty(google.protobuf.message.Message):
    """Message used when no information needs to be exchanged between client application and robot, and vice versa"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___Empty = Empty

class NotificationOptions(google.protobuf.message.Message):
    """Specifies options associated to a notification"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TYPE_FIELD_NUMBER: builtins.int
    RATE_M_SEC_FIELD_NUMBER: builtins.int
    THRESHOLD_VALUE_FIELD_NUMBER: builtins.int
    type: global___NotificationType.ValueType
    """Type of notification"""
    rate_m_sec: builtins.int
    """Rate value (in meters per second) (if applicable)"""
    threshold_value: builtins.float
    """Threshold value (if applicable)"""
    def __init__(
        self,
        *,
        type: global___NotificationType.ValueType = ...,
        rate_m_sec: builtins.int = ...,
        threshold_value: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["rate_m_sec", b"rate_m_sec", "threshold_value", b"threshold_value", "type", b"type"]) -> None: ...

global___NotificationOptions = NotificationOptions

class SafetyHandle(google.protobuf.message.Message):
    """Reference to a specific safety"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IDENTIFIER_FIELD_NUMBER: builtins.int
    identifier: builtins.int
    """Safety identifier"""
    def __init__(
        self,
        *,
        identifier: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["identifier", b"identifier"]) -> None: ...

global___SafetyHandle = SafetyHandle

class NotificationHandle(google.protobuf.message.Message):
    """Reference to a specific notification topic"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IDENTIFIER_FIELD_NUMBER: builtins.int
    identifier: builtins.int
    """Notification identifier"""
    def __init__(
        self,
        *,
        identifier: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["identifier", b"identifier"]) -> None: ...

global___NotificationHandle = NotificationHandle

class SafetyNotification(google.protobuf.message.Message):
    """Notification about a single safety event"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SAFETY_HANDLE_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    USER_HANDLE_FIELD_NUMBER: builtins.int
    CONNECTION_FIELD_NUMBER: builtins.int
    @property
    def safety_handle(self) -> global___SafetyHandle:
        """Safety handle"""
    value: global___SafetyStatusValue.ValueType
    """New safety status"""
    @property
    def timestamp(self) -> global___Timestamp:
        """Event timestamp"""
    @property
    def user_handle(self) -> global___UserProfileHandle:
        """User that caused the safety event"""
    @property
    def connection(self) -> global___Connection:
        """Connection that caused the safety event"""
    def __init__(
        self,
        *,
        safety_handle: global___SafetyHandle | None = ...,
        value: global___SafetyStatusValue.ValueType = ...,
        timestamp: global___Timestamp | None = ...,
        user_handle: global___UserProfileHandle | None = ...,
        connection: global___Connection | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["connection", b"connection", "safety_handle", b"safety_handle", "timestamp", b"timestamp", "user_handle", b"user_handle"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["connection", b"connection", "safety_handle", b"safety_handle", "timestamp", b"timestamp", "user_handle", b"user_handle", "value", b"value"]) -> None: ...

global___SafetyNotification = SafetyNotification

class Timestamp(google.protobuf.message.Message):
    """Timestamp based on Epoch (00:00:00 Thursday, January 1, 1970)"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SEC_FIELD_NUMBER: builtins.int
    USEC_FIELD_NUMBER: builtins.int
    sec: builtins.int
    """Number of seconds that have elapsed since Epoch"""
    usec: builtins.int
    """Number of microseconds that have elapsed since the last second (0-999999)"""
    def __init__(
        self,
        *,
        sec: builtins.int = ...,
        usec: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["sec", b"sec", "usec", b"usec"]) -> None: ...

global___Timestamp = Timestamp

class UserProfileHandle(google.protobuf.message.Message):
    """Reference to a user profile"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IDENTIFIER_FIELD_NUMBER: builtins.int
    PERMISSION_FIELD_NUMBER: builtins.int
    identifier: builtins.int
    """User profile identifier"""
    permission: builtins.int
    """Must use 'Permission' as bitwise"""
    def __init__(
        self,
        *,
        identifier: builtins.int = ...,
        permission: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["identifier", b"identifier", "permission", b"permission"]) -> None: ...

global___UserProfileHandle = UserProfileHandle

class Connection(google.protobuf.message.Message):
    """Connection between a user and the robot"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_HANDLE_FIELD_NUMBER: builtins.int
    CONNECTION_INFORMATION_FIELD_NUMBER: builtins.int
    CONNECTION_IDENTIFIER_FIELD_NUMBER: builtins.int
    @property
    def user_handle(self) -> global___UserProfileHandle:
        """User profile handle, or set to zero if no user logged in"""
    connection_information: builtins.str
    """Connection info (e.g. IP address with port number)"""
    connection_identifier: builtins.int
    """Connection identifier"""
    def __init__(
        self,
        *,
        user_handle: global___UserProfileHandle | None = ...,
        connection_information: builtins.str = ...,
        connection_identifier: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_handle", b"user_handle"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["connection_identifier", b"connection_identifier", "connection_information", b"connection_information", "user_handle", b"user_handle"]) -> None: ...

global___Connection = Connection

class UARTConfiguration(google.protobuf.message.Message):
    """UART configuration details"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PORT_ID_FIELD_NUMBER: builtins.int
    ENABLED_FIELD_NUMBER: builtins.int
    SPEED_FIELD_NUMBER: builtins.int
    WORD_LENGTH_FIELD_NUMBER: builtins.int
    STOP_BITS_FIELD_NUMBER: builtins.int
    PARITY_FIELD_NUMBER: builtins.int
    port_id: builtins.int
    """UART port identification"""
    enabled: builtins.bool
    """True if UART device is enabled, false otherwise"""
    speed: global___UARTSpeed.ValueType
    """Speed selection"""
    word_length: global___UARTWordLength.ValueType
    """Word length"""
    stop_bits: global___UARTStopBits.ValueType
    """Stop bits"""
    parity: global___UARTParity.ValueType
    """Parity mode"""
    def __init__(
        self,
        *,
        port_id: builtins.int = ...,
        enabled: builtins.bool = ...,
        speed: global___UARTSpeed.ValueType = ...,
        word_length: global___UARTWordLength.ValueType = ...,
        stop_bits: global___UARTStopBits.ValueType = ...,
        parity: global___UARTParity.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled", b"enabled", "parity", b"parity", "port_id", b"port_id", "speed", b"speed", "stop_bits", b"stop_bits", "word_length", b"word_length"]) -> None: ...

global___UARTConfiguration = UARTConfiguration

class UARTDeviceIdentification(google.protobuf.message.Message):
    """UART port id identification"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PORT_ID_FIELD_NUMBER: builtins.int
    port_id: builtins.int
    """UART device port id"""
    def __init__(
        self,
        *,
        port_id: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["port_id", b"port_id"]) -> None: ...

global___UARTDeviceIdentification = UARTDeviceIdentification

class CountryCode(google.protobuf.message.Message):
    """Country code"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IDENTIFIER_FIELD_NUMBER: builtins.int
    identifier: global___CountryCodeIdentifier.ValueType
    """ISO3166 country code identifier"""
    def __init__(
        self,
        *,
        identifier: global___CountryCodeIdentifier.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["identifier", b"identifier"]) -> None: ...

global___CountryCode = CountryCode
